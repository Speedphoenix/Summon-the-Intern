pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()

	mode = "start"
	sqrt_inv_2 = 1 / sqrt(2)
	
	startx, starty = find_tile(32)
	startx *= 8
	starty *= 8
	
	paper_sp = 58
	interact_distance_sq = 8 * 8

	player = {
		sp = 1,
		x = startx,
		y = starty,
		h = 8,
		w = 8,
		dx = 0,
		dy = 0,
		acc = 1,
		fric = .1,
		max_d = 1.5,
		flipx = true,
		running = false,
		
		carrying = 0,
		
		anim_acc = 0,
	 anim_delay = 6,
	 anim_run_delay = 2,
	 anim_frame = 0,
	 
	 idle_frames = {1, 2, 3},
	 run_frames = {4, 5, 6, 7},
	}

	summoners = find_flags(1)
	for i, s in ipairs(summoners) do
		s.anim_acc = 0
	 s.anim_delay = 3
	 s.anim_frame = 0
	 s.idle_frames = { s.sp }
	 s.flipx = false
	 s.stackx = -1
	 s.stacky = -1
	 s.x = s.tx * 8
	 s.y = s.ty * 8
		mset(s.tx, s.ty, 0)
	end
end



function _update()

	if mode =="game" then update_game()
	elseif mode == "start" then update_start()
	elseif mode == "end" then update_end() end

end



function _draw()

	if mode =="game" then draw_game()
	elseif mode == "start" then draw_start()
	elseif mode == "end" then draw_end() end

--	print(player.running, 0, 0, 0)
--	for index, s in ipairs(summoners) do
--	
--		print("".. index .. " " .. s.stackx .. " " .. s.stacky)
--	end
--	if lastsummonable != nil then
--		print(lastsummonable.stackx)
--	else
--		print(nil)
--	end
--	print(last_t)
end


-->8
--  custom function

function update_player()
	ldx = 0
	ldy = 0
	
	local lx=player.x
	local ly=player.y

	if btn(‚¨ÖÔ∏è) then ldx -= 1 player.flipx = true end
	if btn(‚û°Ô∏è) then ldx += 1 player.flipx = false end
	if btn(‚¨ÜÔ∏è) then ldy -= 1 end
	if btn(‚¨áÔ∏è) then ldy += 1 end 		

	if ldx == 0 then
		player.dx *= player.fric
 end
	if ldy == 0 then
		player.dy *= player.fric
	end
	
	if ldx != 0 and ldy != 0 then
		ldx *= sqrt_inv_2
		ldy *= sqrt_inv_2
	end

	if ldx != 0 or ldy != 0 then
	 player.running = true
	else
	 player.running = false
 end
	
	
	player.dx += ldx * player.acc
	player.dy += ldy * player.acc
		
	-- if btn(‚¨ÖÔ∏è) then player.dx -= player.acc end
	-- if btn(‚û°Ô∏è) then player.dx += player.acc end
	-- if btn(‚¨ÜÔ∏è) then player.dy -= player.acc end
	-- if btn(‚¨áÔ∏è) then player.dy += player.acc end 		
 
 if abs(player.dx) > player.max_d then
 	if player.dx > 0 then
  	player.dx = player.max_d
  else
   player.dx = player.max_d*-1
 	end
 end
 
 if abs(player.dy) > player.max_d then
 	if player.dy > 0 then
  	player.dy = player.max_d
  else
   player.dy = player.max_d*-1
 	end
 end
 
 player.x += player.dx
 player.y += player.dy
 
 -- check interactions
 if btn(üÖæÔ∏è) then
 	for i, s in ipairs(summoners) do
 		local distx = s.x - player.x
 		local disty = s.y - player.y
 		local distsq = distx * distx + disty * disty
 		if s.stackx >= 0
 			and distsq <= interact_distance_sq then
				dointeract(s)
 		end
 	end
 end
 
     --check collision
    if player.dx>0 then

        if collide_map(player,"right", 0) then
            player.dx=0
            player.x=lx
        end
    end
        
    if player.dx<0 then
        if collide_map(player,"left",0) then
            player.dx=0
            player.x=lx  
        end
    end
    
    if player.dy<0 then
        if collide_map(player,"up",0) then
            player.dy=0
            player.y=ly
        end
    end
    
    if player.dy>0 then
        if collide_map(player,"down",0) then
            player.dy=0
            player.y=ly
        end
    end      

end

function collide_map(obj,aim,flag)

    local x1=0
    local y1=0
    local x2=0
    local y2=0

    local x=obj.x local y=obj.y local w=obj.w local h=obj.h

    if aim=="left" then
        x1=x+1   y1=y+2
        x2=x+2    y2=y+h-3
    elseif aim=="right" then
        x1=x+w-2   y1=y+2
        x2=x+w-1  y2=y+h-3
    elseif aim=="up" then
        x1=x+5    y1=y-1
        x2=x+w-5  y2=y
    elseif aim=="down" then
        x1=x+3      y1=y+h-1
        x2=x+w-4    y2=y+h+obj.dy/4
    end

    --pixel to tiles
    x1=x1/8  x2/=8  y1/=8  y2/=8

    local a= fget(mget(x1,y1), flag) 
    local b= fget(mget(x1,y2), flag) 
    local c= fget(mget(x2,y1), flag) 
    local d= fget(mget(x2,y2), flag)

    if a or b or c or d then
        is_collide=true
        return true
    else
        is_collide=false
        return false
    end


end


function anim_player(obj)

	local frames = obj.idle_frames
	local delay = obj.anim_delay
 if obj.running then
 	frames = obj.run_frames
 	delay = obj.anim_run_delay
 end
 
	obj.anim_acc -= 1
 if obj.anim_acc <= 0 then --si anim_play atteint 0, reset compteur a rebour a anim_spd   
  obj.anim_acc = obj.anim_delay
  obj.anim_frame += 1
 end
 
 if obj.anim_frame > count(frames) then
  obj.anim_frame = 1
 end
 obj.sp = frames[obj.anim_frame]
end

function find_tile(n)
	for i = 0, 16 do
		for j = 0, 16 do
			if mget(i, j) == n then
				return i, j
			end
		end
	end
	return nil
end

function find_flags(f)
	local ret = {}
	for i = 0, 16 do
		for j = 0, 16 do
			local t = mget(i, j)
			if fget(t, f) then
				add(ret, {
					tx = i,
					ty = j,
					sp = t,
				})
			end
		end
	end
	return ret
end

function shuffle(arr)
	local len = count(arr)
	for i = 0, (len - 2) do
		local r = 1 + flr(rnd(len - i))
		local inter = arr[len - i]
		arr[len - i] = arr[r]
		arr[r] = inter
	end
end
-->8
-- update main menu

function update_start()



 if btnp(‚ùé) or btnp(üÖæÔ∏è) then 
  startgame()  
  mode="game"
 end
 
end
-->8
-- update game

function update_game()
 if btnp(‚ùé) and btnp(üÖæÔ∏è)
 then mode="end" end
 
 update_player()
 update_summons()
 anim_player(player)
 for i, s in ipairs(summoners) do
 	anim_player(s)
 end
 
end


function startgame()
	player.x = startx
	player.y = starty
	
	summon_delay = 150
	next_summon = summon_delay
end

function get_summonable()
	for index, s in ipairs(summoners) do
		if s.stackx < 0 then
			for i = -1, 1 do
				for j = -1, 1 do
					if i == 0 and j == 0 then
					else
						local t = mget(s.tx + i, s.ty + j)
						local deco = mget(s.tx + i + 16, s.ty + j)
						if fget(t, 2) and deco <= 0 then
							s.stackx = s.tx + i
							s.stacky = s.ty + j
							return s
						end
					end
				end
			end
		end
	end
	return nil
end

function update_summons()
	next_summon -= 1
	if next_summon <= 0 then
		next_summon = summon_delay
		shuffle(summoners)
		local s = get_summonable()
		lastsummonable = s
		if s != nil then
			mset(s.stackx + 16, s.stacky, paper_sp)
		end
	end
end

function dointeract(s)
	player.carrying += 1
	mset(s.stackx + 16, s.stacky, 0)
	s.stackx = -1
	s.stacky = -1
end

-->8
-- update end menu

function update_end()

 if btnp(‚ùé) or btnp(üÖæÔ∏è)
 then mode="start" end
 
end
-->8
-- draw main menu

function draw_start()

	cls(3)

end
-->8
-- draw game

function draw_game()

	cls(13)
	map(0,0)
	map(16,0)
	
	for i, s in ipairs(summoners) do
		draw_entity(s)
	end

	draw_entity(player)
end

function draw_entity(obj)
		spr(obj.sp, obj.x, obj.y, 1, 1, obj.flipx)
		if obj.carrying != nil and obj.carrying > 0 then
			for i = 0, obj.carrying do
				spr(paper_sp, obj.x + 3, obj.y + 2 - i * 3)
			end
		end
end
-->8
-- draw end menu

function draw_end()
	cls(8)

end
__gfx__
00000000000999000009990000000000000999000000000000099900000000000000999000000000000000000000000000000000000000000000000000000000
000000000009fc000009fc00000999000009fc00000999000009fc000009990000009fc00000999000009990000000000aaaaaaaaaaaaaaaaaaaaaa000000000
00700700000fff00000fff000009fc00000fff000009fc00000fff000009fc000010fff000109fc000009fc0000000009d55555555555555555555d900000000
000770000004880000048800000fff0000088400000fff0000448800000fff00001184800011fff00011ff4f0000000095555555555555555555555900000000
000770000004f8000004880000048800000884f00008480000f88800000848000001884f0001844f000184800000000095555555555555555555555900000000
00700700000888000004f8000004f8000008880000084f000008880000084f00000111660001116600011166000000009d55555555555555555555d900000000
00000000000605000008880000088800006605000006600000550600000560000000010600000106000001060000000009999999999999999999999000000000
00000000000605000006050000060500000005000000500000000600000060000000101000001010000010100000000000000000000000000000000000000000
00000000000099900000000000000000000099900555000000000000000000000555000000000000000000000000000009090000090900000909000009090000
000000000000ff3000009990000099900000ff300145500005550000055500000145500000000000000000000000000009990000099900000999000009990000
000000000010fff00010ff300000ff300010ff800444010001455100014550000844010000000000000000000000000005990000059900000599000005990000
00000000001131300011fff00011fff0001131300313110004441100044411000313110000000000000000000000000009994000099940000999400009994000
000000000001331f0001311f0011311f0001331f4133100041131000411311004133100000000000000000000000000009999400099994000999940009999400
0000000000011155000111550001333000011155551110005511100003331000551110000000000000000000000000000f9f99400f9f94400f9f99400f9f9940
00000000000001050000010500001155000001055010000050100000551100005010000000000000000000000000000000000040000004000000004000000040
00000000000010100000101000001015000010100101000001010000510100000101000000000000000000000000000000000040000040000000004000000004
00005000000000000000000000000000000000000044400000000000000000000044400000000000000000000000000000000000000000000000000000000000
0000500000000000000000000000000000088800004440000044400000444000004f10f000000000000000000000000000000000000000000000000000000000
000050000008880000000000000888000044480000fff00000444000004f100000ff803000000000000000000000000000000000000000000000000000000000
05551000004448000008880000444800000cfc00031113000011100000fff0000311130000000000000000000000000000000000000000000000000000000000
05551000000cfc0000444800000cfc00000f8f0f0011100003111300031113000011100000000000000000000000000000000000000000000000000000000000
01110000000fff00000cfc00000fff00000311300055500000555000001110000055500000000000000000000000000000000000000000000000000000000000
0010000000031300000fff0000031100000311000001000000010000005550000001000000000000000000000000000000000000000000000000000000000000
01010000000f1f00000f1f00000f11f0000f11000010100000101000001010000010100000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000700000000000000700000000000000000000000000000000000000000000000000000001110000000000
00000000000000000000000000000000000000000000700000000000000700000777777000000000000000000000000000000000000000000111555000011100
00000000000000000000000000000000000000000007700007777770000770000777777000000000000000000000000000000000000000000555665001115550
00000000000000000000000000000000000000000006700007111170000760000776677000000000000000000000000000000000000000000555555005556650
00000000000000000000000000000000000000000076700007111170000767000776677000000000000000000000000000000000000000005555555005555550
00000000000000000000000000000000000000000076000007777770000067000066160000000000000000000000000000000000000000005555555055555550
00000000000000000000000000000000000000000000000000666600000000000000100000000000000000000000000000000000000000000060060055555550
00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000060060000600600
444444444444444401000000000000100000000000000000000000000000000000000000899999aa99999999aaaaaaa866666666766666666666666666666667
4444444444444444010000000000001000000000667770000066777700000000000000009944444444444444444444aa77777777767777777777777777777767
444444444dddddd400000000000000000000000055777100001677770000000000000000a4411111111111111111144a77cccc77766777777777777777777667
44444444466666640000000000000000000000006677701001667777000000000000000094111111111111111111114a77cccc77766677777777777777776667
44444444466666640000000000000000000000006677701010667777000000000000000094111111111111111111114977cccc77766667777777777777766667
44444444466666640000000000000000000000006877701010667777000000000000000094111111111111111111114977dddd77766666777777777777666667
44444444444444440000000000000000000000006677701110667777000000000000000094111111111111111111114977777777766666677777777776666667
44444444444444440000000000000000000000000000000000000000000000000000000094111111111111111111114955555555766666655555555556666667
444444444444444401000010000000000000000003b33b30000003b3000000000000000094111111111111111111114966666666766666657666666556666667
444444444dddddd40100001000000000000000003b33b3b300003333000000000000000094111111111111111111114977777777766666657766666556666667
44444444466666640000000000000000000000003303b33303b33000000b00000000000094111111111111111111114977777777766666657776666556666667
44444444466666640000000000000000000000000003b03303330000004340000000000094111111111111111111114977777777766666657777666556666667
44444444466666640000000000000000000000000093390000030000004440000000000094111111111111111111114977777777766666657777766556666667
44444444444444440000000000000000000000000099990000939000000000000000000094411111111111111111114977777777766666657777776556666667
44444444444444440000000000000000000000000044440000999000000000000000000099444444444444444444449944444444766666657777777556666667
55555555555555550000000000000000000000000044440000444000000000000000000089999999999999999999999844444444766666655555555556666667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076000000766556655666666756655667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000066166000076660000766445655666666756544667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000006777177760076666600766441555666666755144667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000067777777776076666665766444455666666754444667
000000000000000000000000000000000000000000000000000000000000000000000000000000000000777777777770766666dd766444445666666744444667
0000000000000000000000000000000000000000000000000000000000000000000000000000000000067777777777767666dddd766644445666666744446667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000677777777777676dddddd766664445666666744466667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000117777177771176666666766666647777777746666667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000677777777777611111111766666650000000056666667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000677777777777611111111766666655555555556666667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777777011111111766666dddddddddddd666667
0000000000000000000000000000000000000000000000000000000000000000000000000000000000006777777777601111111176666dddddddddddddd66667
000000000000000000000000000000000000000000000000000000000000000000000000000000000000067771777600111111117666dddddddddddddddd6667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000066166000011111111766dddddddddddddddddd667
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111176dddddddddddddddddddd67
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111766666666666666666666667
__gff__
0000000000000000030303000000000000030303030303030300000000000000000303030303030303000000000000000000000000000000000000000000000001050000000101000001010101010101010500000001010000010101010101010000000000000000000000000101010100000000000000000000000001010101
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
494a4a4a4a4a4a4a4a4a4a4a4a4a4a4b6a6b0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
595a5a5a5a5a5a5a5a5a5a5a5a5a5a5b7a7b0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4d4e5c4c4e4e4e4e4e4e4e4c4e5c4e4f10101010000010001010101000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d00400000414040400000000040565f10000000005700360000000010450010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d00500000502511500000001140005f10000000003500000000000000370010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6d00520000520000520040000051006f10000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d00000041404041000040200000005f10000000000000000000350000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d00001140421150000050000000005f10000000370000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d00000040000052000052000000005f10000000000000000000000000002c10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6d000000401500004d4e4e5c4e5c4e4f10000000350000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d000000510000005d0021400040155f1000000000000000001c570000350010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d000000520000005d5150500051505f10000000000000000038000000005710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d001140210000005d4242430042525f10000037000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d000051505015005e0000000000215f10000000383900000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d55004242430000000000560000505f10000000000000000000000000003810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7d7e7e7e7e7e7e7e7e7e7e7e7e7e7e7f10101010101010101010101010105210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000b55009530065200000000000000000000000000000000000000000000000000000000000001f70000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000050200d030150500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000204001020000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020000117100d71000700006000c0001300011000100000c0001300011000046000160001600110000c710117101070011000100000c0000d700107001370008600076000c0000c0000c000130001100010000
